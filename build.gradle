plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'io.openapiprocessor.openapi-processor' version '2023.1'
    id 'io.freefair.lombok' version '8.2.2'
}

group = 'com.bank'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Junit
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /* Open api **/
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation "io.swagger.parser.v3:swagger-parser-v3:2.1.16"
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.9'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Mapper
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

}

/* API generation task. */

openapiProcessor {
    apiPath "$projectDir/api/resources/static/activity-api.yaml"
    spring {
        processor "io.openapiprocessor:openapi-processor-spring:2023.1.2"
        targetDir "$buildDir/generated/sources/main/java"
        mapping "$projectDir/api/resources/mapping/global-mapping.yaml"
    }
}

tasks.register('copyApiDefinition', Copy) {
    from 'api/resources/static'
    into 'build/resources/main'
}

// this is required to access generated apis in project
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/sources/main/java"
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect({
            fileTree(dir: it, excludes: ['com.bank.ActivityService.service.model.*'])
        })))
    }
    reports {
        xml.required = true
    }
}

compileJava {
    dependsOn 'processSpring'
    dependsOn copyApiDefinition
/*	dependsOn copyDockerfile
	dependsOn copyDeployFiles*/
    options.compilerArgs << '-parameters'
    options.compilerArgs += ['-Amapstruct.unmappedTargetPolicy=IGNORE']
    options.encoding = 'UTF-8'
}
